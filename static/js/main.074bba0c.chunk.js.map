{"version":3,"sources":["Components/Header/index.tsx","Components/Modal/index.tsx","Components/Card/index.tsx","Services/api.tsx","Pages/Home/index.tsx","App.tsx","index.tsx"],"names":["Header","className","Modal","props","onClick","onClose","name","id","sensors","model","status","healthscore","specifications","maxTemp","metrics","totalCollectsUptime","totalUptime","lastUptimeAt","unitId","companyId","Card","useState","isModalVisible","setIsModalVisible","href","src","image","alt","title","api","axios","create","baseURL","Home","assets","setAssets","users","setUsers","companies","setCompanies","units","setUnits","healthS","useEffect","get","params","limit","then","res","data","i","length","push","fillHealthArray","fillStatusArray","HealthOptions","chart","type","text","series","StatusOptions","xAxis","categories","map","asset","companie","user","email","unit","highcharts","Highcharts","options","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.074bba0c.chunk.js","sourcesContent":["import './styles.css'\n\nexport function Header() {\n    return (\n        <>\n            <div className=\"header\">\n                <h1 className=\"logo-title\">Traction Test</h1>\n            </div>\n            <div className=\"line\" />\n\n        </>\n    )\n}\n\n","import { Assets } from '../../Pages/Home'\n\nimport './styles.css'\n\ntype Functions = {\n    onClose: (event: React.MouseEvent<HTMLButtonElement>) => void\n}\n\nexport function Modal(props: Functions & Assets) {\n    return (\n        <div className=\"modal\">\n            <div className=\"container\">\n                <button className=\"close-btn\" onClick={props.onClose} />\n                <div className=\"modal-content\">\n\n                    <ul key={props.id}>\n                        <li >Asset: {props?.name}</li>\n                        <li >Id: {props?.id}</li>\n                        <li >Sensor: {props?.sensors}</li>\n                        <li >Model: {props?.model}</li>\n                        <li >Status: {props?.status}</li>\n                        <li >Healthscore: {props?.healthscore}</li>\n                        <li >Max Temperature: {props.specifications?.maxTemp}</li>\n                        <li >Total Collects Uptime: {props.metrics?.totalCollectsUptime}</li>\n                        <li >Total Uptime: {props.metrics?.totalUptime}</li>\n                        <li >Last Uptime At: {props.metrics?.lastUptimeAt}</li>\n                        <li >Unit id: {props?.unitId}</li>\n                        <li >Company id: {props?.companyId}</li>\n                    </ul>\n\n                </div>\n            </div>\n        </div>\n    )\n\n}\n","import { useState } from 'react';\n\nimport './styles.css'\n\nimport { Assets } from '../../Pages/Home'\nimport { Modal } from '../Modal';\n\ntype CardProps = {\n    title?: string;\n}\n\nexport function Card(props: CardProps & Assets) {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    return (\n        <div>\n            <div className=\"card\" onClick={() => setIsModalVisible(true)}>\n                <a href=\"#start\" className=\"link-card\">\n                    <img src={props.image} alt={props?.name}></img>\n                </a>\n\n            </div>\n            <p className=\"card-title\">{props.title}</p>\n            <div>\n                {isModalVisible ?\n                    <div key={props.id}>\n\n                        <Modal\n                            key={props.id}\n\n                            onClose={() => setIsModalVisible(false)}\n                            name={props?.name}\n                            id={props?.id}\n                            sensors={props?.sensors}\n                            model={props?.model}\n                            status={props?.status}\n                            healthscore={props?.healthscore}\n                            specifications={props?.specifications}\n                            metrics={props?.metrics}\n                            unitId={props?.unitId}\n                            companyId={props?.companyId}\n                        />\n\n                    </div>\n                    : null}\n            </div>\n        </div>\n    )\n}","import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'https://my-json-server.typicode.com/tractian/fake-api'\n})\n\nexport default api","import { useEffect, useState } from 'react'\n\nimport { Header } from '../../Components/Header'\nimport { Card } from '../../Components/Card'\nimport api from '../../Services/api'\n\nimport './styles.css'\n\nimport Highcharts from \"highcharts\"\nimport HighchartsReact from 'highcharts-react-official'\n\nexport type Assets = {\n    id?: number;\n    sensors?: string[];\n    model?: string;\n    status?: string;\n    healthscore: number;\n    name?: string;\n    image?: string;\n    specifications?: Specifications;\n    metrics?: Metrics;\n    unitId?: number;\n    companyId?: number;\n}\n\ntype Companies = {\n    id?: number;\n    name?: string;\n}\n\ntype Units = {\n    id?: number;\n    name?: string;\n    companyId?: number;\n}\n\ntype Users = {\n    id?: number;\n    email?: string;\n    name?: string;\n    unitId?: number;\n    companyId?: number;\n}\n\ntype Specifications = {\n    maxTemp?: number;\n}\n\ntype Metrics = {\n    totalCollectsUptime?: number;\n    totalUptime?: number;\n    lastUptimeAt?: string;\n}\n\nexport function Home() {\n    const [assets, setAssets] = useState<Assets[]>([])\n    const [users, setUsers] = useState<Users[]>([])\n    const [companies, setCompanies] = useState<Companies[]>([])\n    const [units, setUnits] = useState<Units[]>([])\n    const healthS: number[] = [];\n    const status: number[] = [0, 0, 0]; // status[0] = inAlert, status[1] = inDowntime, status[2] = inOperation\n\n    function loadAssetsData() {\n        api.get('/assets', { params: { limit: 1 } }).then(res => {\n            setAssets(res.data)\n        })\n    }\n    function loadUsersData() {\n        api.get('/users', { params: { limit: 1 } }).then(res => {\n            setUsers(res.data)\n        })\n    }\n    function loadUnitsData() {\n        api.get('/units', { params: { limit: 1 } }).then(res => {\n            setUnits(res.data)\n        })\n    }\n    function loadCompaniesData() {\n        api.get('/companies', { params: { limit: 1 } }).then(res => {\n            setCompanies(res.data)\n        })\n    }\n\n\n    function fillHealthArray() {\n        for (let i = 0; i < assets.length; i++) {\n            healthS.push(assets[i].healthscore)\n        }\n    }\n\n    function fillStatusArray() {\n        for (let i = 0; i < assets.length; i++) {\n            if (assets[i].status === \"inAlert\") {\n                status[0] = status[0] + 1;\n            }\n            else if (assets[i].status === \"inDowntime\") {\n                status[1] = status[1] + 1;\n            }\n            else {\n                status[2] = status[2] + 1;\n            }\n        }\n    }\n\n    useEffect(() => {\n        loadAssetsData()\n        loadUsersData()\n        loadUnitsData()\n        loadCompaniesData()\n    }, [])\n\n    fillHealthArray();\n    fillStatusArray();\n\n    const HealthOptions = {\n        chart: {\n            type: \"line\"\n\n        },\n        title: {\n            text: ''\n        },\n        series: [\n            {\n                type: 'line',\n                name: 'Saúde',\n                data: healthS\n            }\n        ]\n    }\n\n    const StatusOptions = {\n        chart: {\n            type: \"bar\"\n        },\n        title: {\n            text: ''\n        },\n        xAxis: {\n            categories: ['In alert', 'In downtime', 'In operation']\n        },\n        series: [\n            {\n                name: \"Valores\",\n                data: status\n            }\n        ]\n    }\n\n\n    return (\n        <div id=\"start\">\n            <Header />\n            <h1 className=\"title\">Ativos</h1>\n            <div className=\"assets\">\n                {assets.map(asset => {\n                    return (\n                        <div key={asset.id}>\n                            <Card\n                                key={asset.id}\n                                image={asset?.image}\n                                title={asset?.name}\n\n                                name={asset?.name}\n                                id={asset?.id}\n                                sensors={asset?.sensors}\n                                model={asset?.model}\n                                status={asset?.status}\n                                healthscore={asset?.healthscore}\n                                specifications={asset?.specifications}\n                                metrics={asset?.metrics}\n                                unitId={asset?.unitId}\n                                companyId={asset?.companyId}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n\n            <h1 className=\"title\">Empresas</h1>\n            <table className=\"table\">\n                <tbody>\n                    <tr>\n                        <th>Empresa</th>\n                        <th>Id</th>\n                    </tr>\n                    {companies.map(companie => {\n                        return (\n                            <>\n                                <tr>\n                                    <td>{companie.name}</td>\n                                    <td>{companie.id}</td>\n                                </tr>\n                            </>\n                        )\n                    })}\n                </tbody>\n            </table>\n\n            <h1 className=\"title\">Usuários</h1>\n            <table className=\"table\">\n                <tbody>\n                    <tr>\n                        <th>Nome</th>\n                        <th>email</th>\n                        <th>Company Id</th>\n                        <th>Id</th>\n                    </tr>\n                    {users.map(user => {\n                        return (\n                            <>\n                                <tr>\n                                    <td>{user.name}</td>\n                                    <td>{user.email}</td>\n                                    <td>{user.companyId}</td>\n                                    <td>{user.id}</td>\n                                </tr>\n                            </>\n                        )\n                    })}\n                </tbody>\n            </table>\n\n            <h1 className=\"title\">Unidades</h1>\n            <table className=\"table\">\n                <tbody>\n                    <tr>\n                        <th>Nome</th>\n                        <th>Company Id</th>\n                        <th>Id</th>\n                    </tr>\n                    {units.map(unit => {\n                        return (\n                            <>\n                                <tr>\n                                    <td>{unit.name}</td>\n                                    <td>{unit.companyId}</td>\n                                    <td>{unit.id}</td>\n                                </tr>\n                            </>\n                        )\n                    })}\n                </tbody>\n            </table>\n\n            <div className=\"charts-container\">\n                <div>\n                    <h1 className=\"title\">Saúde</h1>\n                    <div className=\"chart\">\n                        <HighchartsReact highcharts={Highcharts} options={HealthOptions} />\n                    </div>\n                </div>\n                <div>\n                    <h1 className=\"title\">Status</h1>\n                    <div className=\"chart\">\n                        <HighchartsReact highcharts={Highcharts} options={StatusOptions} />\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n","import { Home } from './Pages/Home'\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}